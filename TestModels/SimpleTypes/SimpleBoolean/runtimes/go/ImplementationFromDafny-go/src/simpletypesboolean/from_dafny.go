// Code generated by smithy-go-codegen DO NOT EDIT.

package simpletypesboolean

import (
	"simpletypesbooleaninternaldafnytypes"
	"types"
)

func GetBoolean_Input_FromDafny(dafnyInput simpletypesbooleaninternaldafnytypes.GetBooleanInput) types.GetBooleanInput {

	return types.GetBooleanInput{Value: func() *bool {
		var b bool
		if dafnyInput.Dtor_value().UnwrapOr(nil) == nil {
			return nil
		}
		b = dafnyInput.Dtor_value().UnwrapOr(nil).(bool)
		return &b
	}()}

}

func GetBoolean_Output_FromDafny(dafnyOutput simpletypesbooleaninternaldafnytypes.GetBooleanOutput) types.GetBooleanOutput {

	return types.GetBooleanOutput{Value: func() *bool {
		var b bool
		if dafnyOutput.Dtor_value().UnwrapOr(nil) == nil {
			return nil
		}
		b = dafnyOutput.Dtor_value().UnwrapOr(nil).(bool)
		return &b
	}()}

}

func CollectionOfErrors_Output_FromDafny(dafnyOutput simpletypesbooleaninternaldafnytypes.Error) types.CollectionOfErrors {
	listOfErrors := dafnyOutput.Dtor_list()
	message := dafnyOutput.Dtor_message()
	t := types.CollectionOfErrors{}
	for i := dafny.Iterate(listOfErrors); ; {
		val, ok := i()
		if !ok {
			break
		}
		err := val.(simpletypesbooleaninternaldafnytypes.Error)

		if err.Is_CollectionOfErrors() {
			t.ListOfErrors = append(t.ListOfErrors, CollectionOfErrors_Output_FromDafny(err))
		}
		if err.Is_Opaque() {
			t.ListOfErrors = append(t.ListOfErrors, OpaqueError_Output_FromDafny(err))
		}
	}
	t.Message = func() string {
		var s string
		for i := dafny.Iterate(message); ; {
			val, ok := i()
			if !ok {
				return s
			} else {
				s = s + string(val.(dafny.Char))
			}
		}
	}()
	return t
}
func OpaqueError_Output_FromDafny(dafnyOutput simpletypesbooleaninternaldafnytypes.Error) types.OpaqueError {
	return types.OpaqueError{
		ErrObject: dafnyOutput.Dtor_obj(),
	}
}

func SimpleBooleanConfig_Output_FromDafny(dafnyOutput simpletypesbooleaninternaldafnytypes.SimpleBooleanConfig) types.SimpleBooleanConfig {
	return types.SimpleBooleanConfig{}

}
